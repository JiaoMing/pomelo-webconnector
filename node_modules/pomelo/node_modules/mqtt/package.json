{
  "author": {
    "name": "Adam Rudd",
    "email": "adam.rudd@uqconnect.edu.au"
  },
  "name": "mqtt",
  "description": "A library for the MQTT protocol",
  "version": "0.3.9",
  "contributors": [
    {
      "name": "Matteo Collina",
      "email": "matteo.collina@gmail.com",
      "url": "https://github.com/mcollina"
    }
  ],
  "keywords": [
    "mqtt",
    "publish/subscribe",
    "publish",
    "subscribe"
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/adamvr/MQTT.js.git"
  },
  "main": "index.js",
  "scripts": {
    "test": "mocha"
  },
  "pre-commit": "test",
  "bin": {
    "mqtt_pub": "./bin/mqtt_pub",
    "mqtt_sub": "./bin/mqtt_sub"
  },
  "engines": {
    "node": ">=0.8.6"
  },
  "browser": {
    "./lib/mqtt.js": "./lib/browser.js",
    "./lib/parsing_utils.js": "./lib/parsing_utils_browser.js"
  },
  "dependencies": {
    "readable-stream": "~1.0.2",
    "bops": "~0.1.1"
  },
  "devDependencies": {
    "mocha": "*",
    "should": "*",
    "pre-commit": "0.0.7",
    "sinon": "~1.10.0"
  },
  "readme": "# mqtt.js [![Build Status](https://travis-ci.org/adamvr/MQTT.js.png)](https://travis-ci.org/adamvr/MQTT.js)\n\n## Introduction\n\n[![NPM](https://nodei.co/npm/mqtt.png)](https://nodei.co/npm/mqtt/)\n[![NPM](https://nodei.co/npm-dl/mqtt.png)](https://nodei.co/npm/mqtt/)\n\nmqtt.js is a library for the [MQTT](http://mqtt.org/) protocol, written\nin JavaScript to be used in node.js.\n\n## Important notes for existing users\n\n* v0.3.0 improves connection stability, performance, the reconnection\n  logic and SSL support. See [#118](https://github.com/adamvr/MQTT.js/pull/118) for\n  details. A Connection is a Writable stream, so you can run\n  MQTT.js over any kind of Stream (doc needed). Both the constructors of\n  MqttClient and MqttConnection changed, but not the factory method\n  `mqtt.createClient` and `mqtt.createConnection`.\n\n* v0.2.0 has brough some API breaking changes to mqtt.js. \n  Please consult the [migration guide](http://github.com/adamvr/MQTT.js/wiki/migration) for information\n  or open an issue if you need any help.\n\n## Installation\n\n    npm install mqtt\n\n## Example\n\nFirst you will need to install and run a broker, such as\n[Mosquitto](http://mosquitto.org) or\n[Mosca](http://mcollina.github.io/mosca/), and launch it.\n\nFor the sake of simplicity, let's put the subscriber and the publisher in the same file:\n```js\nvar mqtt = require('mqtt')\n\nclient = mqtt.createClient(1883, 'localhost');\n\nclient.subscribe('presence');\nclient.publish('presence', 'Hello mqtt');\n\nclient.on('message', function (topic, message) {\n  console.log(message);\n});\n\nclient.end();\n```\n\noutput:\n```\nHello mqtt\n```\n\nIf you do not want to install a separate broker, you can try using the\n[server/orig](https://github.com/adamvr/MQTT.js/blob/master/examples/server/orig.js)\nexample.\nIt implements enough of the semantics of the MQTT protocol to\nrun the example.\n\n## Documentation\n\nDetailed documentation can be found in [the wiki](http://github.com/adamvr/MQTT.js/wiki)\n\n## Client API usage\n\nSee: [examples/client](https://github.com/adamvr/MQTT.js/tree/master/examples/client)\n\n### Simple publish client\n\n```js\nvar mqtt = require('mqtt')\n  , client = mqtt.createClient();\n\nclient.publish('messages', 'mqtt');\nclient.publish('messages', 'is pretty cool');\nclient.publish('messages', 'remember that!', {retain: true});\nclient.end();\n```\n\n### Simple subscribe client\n\n```js\nvar mqtt = require('mqtt')\n  , client = mqtt.createClient();\n\nclient.subscribe('messages');\nclient.publish('messages', 'hello me!');\nclient.on('message', function(topic, message) {\n  console.log(message);\n});\nclient.options.reconnectPeriod = 0;  // disable automatic reconnect\n```\n\n### Connect using a URL\n\nUsing the connect method, which can create either a normal or secure MQTT client.\n\n```js\nvar mqtt = require('mqtt')\n  , client = mqtt.connect('mqtt://user:pass@localhost?clientId=123abc');\n\nclient.subscribe('messages');\nclient.publish('messages', 'hello me!');\nclient.on('message', function(topic, message) {\n  console.log(message);\n});\n```\n\nSupports `mqtt://` and `tcp://` for normal connections, and `mqtts://` or `ssl://` for secure connections.\n\nAs seen above the `clientId` can be passed in as a query parameter.\n\n### Chainable API!\n\n```js\nvar mqtt = require('mqtt')\n  , client = mqtt.createClient();\n\nclient\n  .subscribe('messages')\n  .publish('presence', 'bin hier')\n  .on('message', function(topic, message) {\n    console.log(topic);\n  });\n```\n\n## Server API usage\n\n### Broadcast server example\n\nIncluded in [examples/broadcast.js](https://github.com/adamvr/MQTT.js/blob/master/examples/server/broadcast.js):\n\n```js\nvar mqtt = require('mqtt');\n\nmqtt.createServer(function(client) {\n  var self = this;\n\n  if (!self.clients) self.clients = {};\n\n  client.on('connect', function(packet) {\n    client.connack({returnCode: 0});\n    client.id = packet.clientId;\n    self.clients[client.id] = client;\n  });\n\n  client.on('publish', function(packet) {\n    for (var k in self.clients) {\n      self.clients[k].publish({topic: packet.topic, payload: packet.payload});\n    }\n  });\n\n  client.on('subscribe', function(packet) {\n    var granted = [];\n    for (var i = 0; i < packet.subscriptions.length; i++) {\n      granted.push(packet.subscriptions[i].qos);\n    }\n\n    client.suback({granted: granted, messageId: packet.messageId});\n  });\n\n  client.on('pingreq', function(packet) {\n    client.pingresp();\n  });\n\n  client.on('disconnect', function(packet) {\n    client.stream.end();\n  });\n\n  client.on('close', function(err) {\n    delete self.clients[client.id];\n  });\n\n  client.on('error', function(err) {\n    client.stream.end();\n    console.log('error!');\n  });\n}).listen(1883);\n```\n\n## License\n\nMIT\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/adamvr/MQTT.js/issues"
  },
  "_id": "mqtt@0.3.9",
  "dist": {
    "shasum": "b8b07d4f51460ca67bb8dc640a68c10abeab3e64"
  },
  "_from": "mqtt@0.3.9",
  "_resolved": "http://registry.npmjs.org/mqtt/-/mqtt-0.3.9.tgz"
}
